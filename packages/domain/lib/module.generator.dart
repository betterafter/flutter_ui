import 'package:build/build.dart';
import 'package:glob/glob.dart';

class AutoGenerator extends Builder {
  @override
  Future<void> build(BuildStep buildStep) async {
    final files = await buildStep.findAssets(Glob('lib/**.dart')).toList();

    final buffer = StringBuffer()
      ..writeln('// GENERATED CODE - DO NOT MODIFY BY HAND')
      ..writeln('// This code was generated by AutoGenerator\n');

    for (final asset in files) {
      final importPath = asset.path.replaceFirst('lib/', '');
      buffer.writeln("import 'package:${asset.package}/$importPath';");
    }

    final outputId = buildStep.inputId.changeExtension('.generated.dart');
    await buildStep.writeAsString(outputId, buffer.toString());
  }

  @override
  Map<String, List<String>> get buildExtensions => {
        '.dart': ['.generated.dart'],
      };
}

Builder autoGeneratorBuilder(BuilderOptions options) => AutoGenerator();
